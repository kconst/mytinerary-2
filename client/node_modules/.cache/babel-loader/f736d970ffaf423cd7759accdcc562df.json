{"ast":null,"code":"import _classCallCheck from \"/Users/shadan/Desktop/Mern-stack/week3/addingtoggling visibility/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shadan/Desktop/Mern-stack/week3/addingtoggling visibility/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shadan/Desktop/Mern-stack/week3/addingtoggling visibility/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shadan/Desktop/Mern-stack/week3/addingtoggling visibility/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shadan/Desktop/Mern-stack/week3/addingtoggling visibility/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/shadan/Desktop/Mern-stack/week3/addingtoggling visibility/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/shadan/Desktop/Mern-stack/week3/addingtoggling visibility/client/src/components/AllCities.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getAllCities } from \"../actions/citiesAction\";\nimport { Link } from \"react-router-dom\";\nimport ToggleDisplay from \"react-toggle-display\";\nimport Itineraries from \"./Itinerary\";\n\nvar AllCities =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AllCities, _Component);\n\n  function AllCities() {\n    var _this;\n\n    _classCallCheck(this, AllCities);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AllCities).call(this));\n\n    _this.handleClick = function () {\n      _this.setState({\n        show: !_this.state.show\n      });\n    };\n\n    _this.state = {\n      search: \"\",\n      show: false\n    };\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AllCities, [{\n    key: \"updateSearch\",\n    //methode to make the filter search\n    value: function updateSearch(event) {\n      // console.log(event.target.value);\n      this.setState({\n        search: event.target.value\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getAllCities();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      //added for earch bar\n      var filteredCities = this.props.cities.filter(function (theCity) {\n        return theCity.city.toUpperCase().indexOf(_this2.state.search.toUpperCase()) !== -1;\n      });\n      console.log(this.props);\n      return React.createElement(\"div\", {\n        className: \"AllCities\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.search,\n        onChange: this.updateSearch.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, filteredCities.map(function (city) {\n        return (// <Link to={`/itineraries/${city.city}`}>\n          React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            className: \"cityPage\",\n            key: city.city,\n            onClick: _this2.handleClick,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }, city.city), React.createElement(ToggleDisplay, {\n            show: _this2.state.show,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }, \"I am rendered in a span (by default) and hidden with display:none when show is false.\"), React.createElement(ToggleDisplay, {\n            if: _this2.state.show,\n            tag: \"section\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          }, \"I am rendered in a section and removed from the DOM when if is false.\"))\n        );\n      })));\n    }\n  }]);\n\n  return AllCities;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    cities: state.cities\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getAllCities: getAllCities\n})(AllCities);","map":{"version":3,"sources":["/Users/shadan/Desktop/Mern-stack/week3/addingtoggling visibility/client/src/components/AllCities.js"],"names":["React","Component","connect","getAllCities","Link","ToggleDisplay","Itineraries","AllCities","handleClick","setState","show","state","search","bind","event","target","value","props","filteredCities","cities","filter","theCity","city","toUpperCase","indexOf","console","log","updateSearch","map","mapStateToProps"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,OAAOC,WAAP,MAAwB,aAAxB;;IAEMC,S;;;;;AACJ,uBAAc;AAAA;;AAAA;;AACZ;;AADY,UASdC,WATc,GASA,YAAM;AAClB,YAAKC,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAE,CAAC,MAAKC,KAAL,CAAWD;AADN,OAAd;AAGD,KAba;;AAEZ,UAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXF,MAAAA,IAAI,EAAE;AAFK,KAAb;AAIA,UAAKF,WAAL,GAAmB,MAAKA,WAAL,CAAiBK,IAAjB,uDAAnB;AANY;AAOb;;;;AAQD;iCACaC,K,EAAO;AAClB;AACA,WAAKL,QAAL,CAAc;AAAEG,QAAAA,MAAM,EAAEE,KAAK,CAACC,MAAN,CAAaC;AAAvB,OAAd;AACD;;;wCAEmB;AAClB,WAAKC,KAAL,CAAWd,YAAX;AACD;;;6BAEQ;AAAA;;AACP;AACA,UAAIe,cAAc,GAAG,KAAKD,KAAL,CAAWE,MAAX,CAAkBC,MAAlB,CAAyB,UAAAC,OAAO,EAAI;AACvD,eACEA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,OAA3B,CAAmC,MAAI,CAACb,KAAL,CAAWC,MAAX,CAAkBW,WAAlB,EAAnC,MACA,CAAC,CAFH;AAID,OALoB,CAArB;AAMAE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAjB;AAEA,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWC,MAFpB;AAGE,QAAA,QAAQ,EAAE,KAAKe,YAAL,CAAkBd,IAAlB,CAAuB,IAAvB,CAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGK,cAAc,CAACU,GAAf,CAAmB,UAAAN,IAAI;AAAA,eACtB;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AACE,YAAA,SAAS,EAAC,UADZ;AAEE,YAAA,GAAG,EAAEA,IAAI,CAACA,IAFZ;AAGE,YAAA,OAAO,EAAE,MAAI,CAACd,WAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAKGc,IAAI,CAACA,IALR,CADF,EAQE,oBAAC,aAAD;AAAe,YAAA,IAAI,EAAE,MAAI,CAACX,KAAL,CAAWD,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qGARF,EAaE,oBAAC,aAAD;AAAe,YAAA,EAAE,EAAE,MAAI,CAACC,KAAL,CAAWD,IAA9B;AAAoC,YAAA,GAAG,EAAC,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qFAbF;AAFsB;AAAA,OAAvB,CADH,CATF,CADF;AAmCD;;;;EAvEqBT,S;;AA0ExB,IAAM4B,eAAe,GAAG,SAAlBA,eAAkB,CAAAlB,KAAK,EAAI;AAC/B,SAAO;AACLQ,IAAAA,MAAM,EAAER,KAAK,CAACQ;AADT,GAAP;AAGD,CAJD;;AAMA,eAAejB,OAAO,CACpB2B,eADoB,EAEpB;AAAE1B,EAAAA,YAAY,EAAZA;AAAF,CAFoB,CAAP,CAGbI,SAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getAllCities } from \"../actions/citiesAction\";\nimport { Link } from \"react-router-dom\";\nimport ToggleDisplay from \"react-toggle-display\";\nimport Itineraries from \"./Itinerary\";\n\nclass AllCities extends Component {\n  constructor() {\n    super();\n    this.state = {\n      search: \"\",\n      show: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick = () => {\n    this.setState({\n      show: !this.state.show\n    });\n  };\n\n  //methode to make the filter search\n  updateSearch(event) {\n    // console.log(event.target.value);\n    this.setState({ search: event.target.value });\n  }\n\n  componentDidMount() {\n    this.props.getAllCities();\n  }\n\n  render() {\n    //added for earch bar\n    let filteredCities = this.props.cities.filter(theCity => {\n      return (\n        theCity.city.toUpperCase().indexOf(this.state.search.toUpperCase()) !==\n        -1\n      );\n    });\n    console.log(this.props);\n\n    return (\n      <div className=\"AllCities\">\n        <input\n          type=\"text\"\n          value={this.state.search}\n          onChange={this.updateSearch.bind(this)}\n        />\n\n        {/* <h1>this is the page for all cities!!!</h1> */}\n\n        <div>\n          {filteredCities.map(city => (\n            // <Link to={`/itineraries/${city.city}`}>\n            <div>\n              <button\n                className=\"cityPage\"\n                key={city.city}\n                onClick={this.handleClick}\n              >\n                {city.city}\n              </button>\n              <ToggleDisplay show={this.state.show}>\n                I am rendered in a span (by default) and hidden with\n                display:none when show is false.\n              </ToggleDisplay>\n\n              <ToggleDisplay if={this.state.show} tag=\"section\">\n                I am rendered in a section and removed from the DOM when if is\n                false.\n              </ToggleDisplay>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    cities: state.cities\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { getAllCities }\n)(AllCities);\n"]},"metadata":{},"sourceType":"module"}