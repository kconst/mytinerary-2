{"ast":null,"code":"import _classCallCheck from \"/Users/shadan/Desktop/Mern-stack/week3/afterGettingindividualCities/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shadan/Desktop/Mern-stack/week3/afterGettingindividualCities/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shadan/Desktop/Mern-stack/week3/afterGettingindividualCities/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shadan/Desktop/Mern-stack/week3/afterGettingindividualCities/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shadan/Desktop/Mern-stack/week3/afterGettingindividualCities/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shadan/Desktop/Mern-stack/week3/afterGettingindividualCities/client/src/components/Itinerary.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getItineraries } from \"../actions/itinerariesAction\";\n\nvar Itineraries =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Itineraries, _Component);\n\n  function Itineraries() {\n    var _this;\n\n    _classCallCheck(this, Itineraries);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Itineraries).call(this));\n    _this.state = {\n      selectedItinerary: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Itineraries, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.match.params.city) {\n        this.props.getItineraries(this.props.match.params.city);\n      }\n    }\n  }, {\n    key: \"selectItinerary\",\n    value: function selectItinerary(itinerary) {\n      this.setState({\n        selectedItinerary: itinerary\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var itineraries = this.props.myTineraries || [];\n      console.log(this.state.selectedItinerary);\n      return React.createElement(\"div\", {\n        className: \"myTineraries\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-mn12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"lead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, itineraries.map(function (itineraries) {\n        return React.createElement(\"li\", {\n          key: itineraries.id,\n          onClick: function onClick() {\n            return _this2.selectItinerary(itinerary.title);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, itinerary.title);\n      }))))));\n    }\n  }]);\n\n  return Itineraries;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    itineraries: state.itinerary\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getItineraries: getItineraries\n})(Itineraries);","map":{"version":3,"sources":["/Users/shadan/Desktop/Mern-stack/week3/afterGettingindividualCities/client/src/components/Itinerary.js"],"names":["React","Component","connect","getItineraries","Itineraries","state","selectedItinerary","props","match","params","city","itinerary","setState","itineraries","myTineraries","console","log","map","id","selectItinerary","title","mapStateToProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,8BAA/B;;IAEMC,W;;;;;AACJ,yBAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,iBAAiB,EAAE;AADR,KAAb;AAFY;AAKb;;;;wCAEmB;AAClB,UAAI,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,IAA5B,EAAkC;AAChC,aAAKH,KAAL,CAAWJ,cAAX,CAA0B,KAAKI,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,IAAlD;AACD;AACF;;;oCAEeC,S,EAAW;AACzB,WAAKC,QAAL,CAAc;AAAEN,QAAAA,iBAAiB,EAAEK;AAArB,OAAd;AACD;;;6BAEQ;AAAA;;AACP,UAAIE,WAAW,GAAG,KAAKN,KAAL,CAAWO,YAAX,IAA2B,EAA7C;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWC,iBAAvB;AACA,aACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGO,WAAW,CAACI,GAAZ,CAAgB,UAAAJ,WAAW,EAAI;AAC9B,eACE;AACE,UAAA,GAAG,EAAEA,WAAW,CAACK,EADnB;AAEE,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACC,eAAL,CAAqBR,SAAS,CAACS,KAA/B,CAAN;AAAA,WAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIGT,SAAS,CAACS,KAJb,CADF;AAQD,OATA,CADH,CADF,CADF,CADF,CADF,CADF;AAsBD;;;;EA3CuBnB,S;;AA8C1B,IAAMoB,eAAe,GAAG,SAAlBA,eAAkB,CAAAhB,KAAK;AAAA,SAAK;AAChCQ,IAAAA,WAAW,EAAER,KAAK,CAACM;AADa,GAAL;AAAA,CAA7B;;AAIA,eAAeT,OAAO,CACpBmB,eADoB,EAEpB;AAAElB,EAAAA,cAAc,EAAdA;AAAF,CAFoB,CAAP,CAGbC,WAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport { getItineraries } from \"../actions/itinerariesAction\";\n\nclass Itineraries extends Component {\n  constructor() {\n    super();\n    this.state = {\n      selectedItinerary: \"\"\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.match.params.city) {\n      this.props.getItineraries(this.props.match.params.city);\n    }\n  }\n\n  selectItinerary(itinerary) {\n    this.setState({ selectedItinerary: itinerary });\n  }\n\n  render() {\n    let itineraries = this.props.myTineraries || [];\n    console.log(this.state.selectedItinerary);\n    return (\n      <div className=\"myTineraries\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-mn12\">\n              <h1 className=\"lead\">\n                {itineraries.map(itineraries => {\n                  return (\n                    <li\n                      key={itineraries.id}\n                      onClick={() => this.selectItinerary(itinerary.title)}\n                    >\n                      {itinerary.title}\n                    </li>\n                  );\n                })}\n              </h1>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  itineraries: state.itinerary\n});\n\nexport default connect(\n  mapStateToProps,\n  { getItineraries }\n)(Itineraries);\n"]},"metadata":{},"sourceType":"module"}