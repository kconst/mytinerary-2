{"ast":null,"code":"import _classCallCheck from \"/Users/shadan/Desktop/Mern-stack/week3/addingtoggling visibility/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shadan/Desktop/Mern-stack/week3/addingtoggling visibility/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shadan/Desktop/Mern-stack/week3/addingtoggling visibility/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shadan/Desktop/Mern-stack/week3/addingtoggling visibility/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shadan/Desktop/Mern-stack/week3/addingtoggling visibility/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shadan/Desktop/Mern-stack/week3/addingtoggling visibility/client/src/components/AllCities.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getAllCities } from \"../actions/citiesAction\";\nimport { Link } from \"react-router-dom\";\nimport ToggleDisplay from \"react-toggle-display\";\nimport Itineraries from \"./Itinerary\";\n\nvar AllCities =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AllCities, _Component);\n\n  function AllCities() {\n    var _this;\n\n    _classCallCheck(this, AllCities);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AllCities).call(this));\n    _this.state = {\n      search: \"\",\n      show: false\n    };\n    return _this;\n  } //methode to make the filter search\n\n\n  _createClass(AllCities, [{\n    key: \"updateSearch\",\n    value: function updateSearch(event) {\n      // console.log(event.target.value);\n      this.setState({\n        search: event.target.value\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getAllCities();\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick() {\n      this.setState({\n        show: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      //added for earch bar\n      var filteredCities = this.props.cities.filter(function (theCity) {\n        return theCity.city.toUpperCase().indexOf(_this2.state.search.toUpperCase()) !== -1;\n      });\n      console.log(this.props);\n      return React.createElement(\"div\", {\n        className: \"AllCities\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.search,\n        onChange: this.updateSearch.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, filteredCities.map(function (city) {\n        return React.createElement(Link, {\n          to: \"/itineraries/\".concat(city.city),\n          onClick: _this2.onClick.bind(_this2),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"cityPage\",\n          key: city.city,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, city.city));\n      }), this.state.show ? React.createElement(Itineraries, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }) : null));\n    }\n  }]);\n\n  return AllCities;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    cities: state.cities\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getAllCities: getAllCities\n})(AllCities);","map":{"version":3,"sources":["/Users/shadan/Desktop/Mern-stack/week3/addingtoggling visibility/client/src/components/AllCities.js"],"names":["React","Component","connect","getAllCities","Link","ToggleDisplay","Itineraries","AllCities","state","search","show","event","setState","target","value","props","filteredCities","cities","filter","theCity","city","toUpperCase","indexOf","console","log","updateSearch","bind","map","onClick","mapStateToProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,OAAOC,WAAP,MAAwB,aAAxB;;IAEMC,S;;;;;AACJ,uBAAc;AAAA;;AAAA;;AACZ;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,IAAI,EAAE;AAFK,KAAb;AAFY;AAMb,G,CAED;;;;;iCACaC,K,EAAO;AAClB;AACA,WAAKC,QAAL,CAAc;AAAEH,QAAAA,MAAM,EAAEE,KAAK,CAACE,MAAN,CAAaC;AAAvB,OAAd;AACD;;;wCAEmB;AAClB,WAAKC,KAAL,CAAWZ,YAAX;AACD;;;kCAEa;AACZ,WAAKS,QAAL,CAAc;AAAEF,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD;;;6BAEQ;AAAA;;AACP;AACA,UAAIM,cAAc,GAAG,KAAKD,KAAL,CAAWE,MAAX,CAAkBC,MAAlB,CAAyB,UAAAC,OAAO,EAAI;AACvD,eACEA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,OAA3B,CAAmC,MAAI,CAACd,KAAL,CAAWC,MAAX,CAAkBY,WAAlB,EAAnC,MACA,CAAC,CAFH;AAID,OALoB,CAArB;AAMAE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAjB;AAEA,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAWC,MAFpB;AAGE,QAAA,QAAQ,EAAE,KAAKgB,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGV,cAAc,CAACW,GAAf,CAAmB,UAAAP,IAAI;AAAA,eACtB,oBAAC,IAAD;AACE,UAAA,EAAE,yBAAkBA,IAAI,CAACA,IAAvB,CADJ;AAEE,UAAA,OAAO,EAAE,MAAI,CAACQ,OAAL,CAAaF,IAAb,CAAkB,MAAlB,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIE;AAAG,UAAA,SAAS,EAAC,UAAb;AAAwB,UAAA,GAAG,EAAEN,IAAI,CAACA,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGA,IAAI,CAACA,IADR,CAJF,CADsB;AAAA,OAAvB,CADH,EAWG,KAAKZ,KAAL,CAAWE,IAAX,GAAkB,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAlB,GAAoC,IAXvC,CATF,CADF;AAyBD;;;;EA1DqBT,S;;AA6DxB,IAAM4B,eAAe,GAAG,SAAlBA,eAAkB,CAAArB,KAAK,EAAI;AAC/B,SAAO;AACLS,IAAAA,MAAM,EAAET,KAAK,CAACS;AADT,GAAP;AAGD,CAJD;;AAMA,eAAef,OAAO,CACpB2B,eADoB,EAEpB;AAAE1B,EAAAA,YAAY,EAAZA;AAAF,CAFoB,CAAP,CAGbI,SAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getAllCities } from \"../actions/citiesAction\";\nimport { Link } from \"react-router-dom\";\nimport ToggleDisplay from \"react-toggle-display\";\nimport Itineraries from \"./Itinerary\";\n\nclass AllCities extends Component {\n  constructor() {\n    super();\n    this.state = {\n      search: \"\",\n      show: false\n    };\n  }\n\n  //methode to make the filter search\n  updateSearch(event) {\n    // console.log(event.target.value);\n    this.setState({ search: event.target.value });\n  }\n\n  componentDidMount() {\n    this.props.getAllCities();\n  }\n\n  handleClick() {\n    this.setState({ show: true });\n  }\n\n  render() {\n    //added for earch bar\n    let filteredCities = this.props.cities.filter(theCity => {\n      return (\n        theCity.city.toUpperCase().indexOf(this.state.search.toUpperCase()) !==\n        -1\n      );\n    });\n    console.log(this.props);\n\n    return (\n      <div className=\"AllCities\">\n        <input\n          type=\"text\"\n          value={this.state.search}\n          onChange={this.updateSearch.bind(this)}\n        />\n\n        {/* <h1>this is the page for all cities!!!</h1> */}\n\n        <div>\n          {filteredCities.map(city => (\n            <Link\n              to={`/itineraries/${city.city}`}\n              onClick={this.onClick.bind(this)}\n            >\n              <p className=\"cityPage\" key={city.city}>\n                {city.city}\n              </p>\n            </Link>\n          ))}\n          {this.state.show ? <Itineraries /> : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    cities: state.cities\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { getAllCities }\n)(AllCities);\n"]},"metadata":{},"sourceType":"module"}