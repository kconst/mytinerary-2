{"ast":null,"code":"import _classCallCheck from \"/Users/shadan/Desktop/Mern-stack/week5/favouritrbtn/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shadan/Desktop/Mern-stack/week5/favouritrbtn/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shadan/Desktop/Mern-stack/week5/favouritrbtn/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shadan/Desktop/Mern-stack/week5/favouritrbtn/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shadan/Desktop/Mern-stack/week5/favouritrbtn/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shadan/Desktop/Mern-stack/week5/favouritrbtn/client/src/components/CityAdmin.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getAllCities, removeCity } from \"../actions/citiesAction\";\nimport { Link } from \"react-router-dom\";\nimport Axios from \"axios\";\n\nvar CityAdmin =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CityAdmin, _Component);\n\n  function CityAdmin() {\n    var _this;\n\n    _classCallCheck(this, CityAdmin);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CityAdmin).call(this));\n\n    _this.toRemove = function (e) {\n      console.log(e.target.id);\n      var cityToDelete = e.target.id;\n      var confirmDelete = window.confirm(\"are you sure you want to delete this city you can not undo this action?\");\n\n      if (confirmDelete) {\n        _this.props.removeCity(cityToDelete); // Axios.delete(`/api/cities/${cityToDelete}`, {\n        //   withCredentials: true,\n        //   headers: { Authorization: localStorage.getItem(\"token\") }\n        // }).then(res => {\n        //   console.log(res.data);\n        // });\n\n      }\n    };\n\n    _this.state = {\n      search: \"\"\n    };\n    return _this;\n  } //methode to make the filter search\n\n\n  _createClass(CityAdmin, [{\n    key: \"updateSearch\",\n    value: function updateSearch(event) {\n      // console.log(event.target.value);\n      this.setState({\n        search: event.target.value\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"1\");\n      this.props.getAllCities();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      //added for earch bar\n      console.log(this.props.cities);\n      var filteredCities = this.props.cities.filter(function (theCity) {\n        return theCity.city.toUpperCase().indexOf(_this2.state.search.toUpperCase()) !== -1;\n      });\n      console.log(\"4\");\n      return React.createElement(\"div\", {\n        className: \"AllCities\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.search,\n        onChange: this.updateSearch.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, filteredCities.map(function (city) {\n        return React.createElement(\"div\", {\n          className: \"removeCityPage\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"cityPage\",\n          key: city._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, city.city), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: _this2.toRemove,\n          id: city._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, \" \", \"X\", \" \")));\n      })));\n    }\n  }]);\n\n  return CityAdmin;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    cities: state.cities\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getAllCities: getAllCities,\n  removeCity: removeCity\n})(CityAdmin);","map":{"version":3,"sources":["/Users/shadan/Desktop/Mern-stack/week5/favouritrbtn/client/src/components/CityAdmin.js"],"names":["React","Component","connect","getAllCities","removeCity","Link","Axios","CityAdmin","toRemove","e","console","log","target","id","cityToDelete","confirmDelete","window","confirm","props","state","search","event","setState","value","cities","filteredCities","filter","theCity","city","toUpperCase","indexOf","updateSearch","bind","map","_id","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getAllCities, removeCity } from \"../actions/citiesAction\";\nimport { Link } from \"react-router-dom\";\nimport Axios from \"axios\";\n\nclass CityAdmin extends Component {\n  constructor() {\n    super();\n    this.state = {\n      search: \"\"\n    };\n  }\n\n  //methode to make the filter search\n  updateSearch(event) {\n    // console.log(event.target.value);\n    this.setState({ search: event.target.value });\n  }\n\n  componentDidMount() {\n    console.log(\"1\");\n    this.props.getAllCities();\n  }\n\n  toRemove = e => {\n    console.log(e.target.id);\n    const cityToDelete = e.target.id;\n    let confirmDelete = window.confirm(\n      \"are you sure you want to delete this city you can not undo this action?\"\n    );\n    if (confirmDelete) {\n      this.props.removeCity(cityToDelete);\n      // Axios.delete(`/api/cities/${cityToDelete}`, {\n      //   withCredentials: true,\n      //   headers: { Authorization: localStorage.getItem(\"token\") }\n      // }).then(res => {\n      //   console.log(res.data);\n      // });\n    }\n  };\n\n  render() {\n    //added for earch bar\n    console.log(this.props.cities);\n    let filteredCities = this.props.cities.filter(theCity => {\n      return (\n        theCity.city.toUpperCase().indexOf(this.state.search.toUpperCase()) !==\n        -1\n      );\n    });\n    console.log(\"4\");\n\n    return (\n      <div className=\"AllCities\">\n        <input\n          type=\"text\"\n          value={this.state.search}\n          onChange={this.updateSearch.bind(this)}\n        />\n\n        {/* <h1>this is the page for all cities!!!</h1> */}\n\n        <div>\n          {filteredCities.map(city => (\n            <div className=\"removeCityPage\">\n              <div className=\"cityPage\" key={city._id}>\n                {city.city}\n              </div>\n              <div>\n                <button onClick={this.toRemove} id={city._id}>\n                  {\" \"}\n                  X{\" \"}\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    cities: state.cities\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { getAllCities, removeCity }\n)(CityAdmin);\n"]},"metadata":{},"sourceType":"module"}