{"ast":null,"code":"import _classCallCheck from \"/Users/shadan/Desktop/Mern-stack/week4/Mytinerary-shadan/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shadan/Desktop/Mern-stack/week4/Mytinerary-shadan/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shadan/Desktop/Mern-stack/week4/Mytinerary-shadan/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shadan/Desktop/Mern-stack/week4/Mytinerary-shadan/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shadan/Desktop/Mern-stack/week4/Mytinerary-shadan/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shadan/Desktop/Mern-stack/week4/Mytinerary-shadan/client/src/components/Comments.js\";\nimport React, { Component } from \"react\"; //import axios from \"axios\";\n\nimport CommentForm from \"./CommentForm\";\nimport { connect } from \"react-redux\";\nimport { getCommentsByItneraryTitle } from \"../actions/commentAction\";\n\nvar Comments =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Comments, _Component);\n\n  function Comments() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Comments);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Comments)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      comments: []\n    };\n    return _this;\n  }\n\n  _createClass(Comments, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // axios.get(`/api/comments`).then(res => {\n      //   console.log(res);\n      //   this.setState({ comments: res.data });\n      // });\n      console.log(this.props.itinerary);\n\n      if (this.props.itinerary) {\n        this.props.getCommentsByItneraryTitle(this.props.comments);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var comments = this.props.comments.filter(function (e) {\n        return e.itineraryReference === _this2.props.itinerary;\n      });\n      return React.createElement(\"div\", {\n        className: \"Comments\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Comments:\", comments.map(function (comment, index) {\n        return React.createElement(\"div\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, comment.user), \":\", comment.message));\n      }), React.createElement(CommentForm, {\n        itinerary: this.props.itinerary,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Comments;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    comments: state.comments\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getCommentsByItneraryTitle: getCommentsByItneraryTitle\n})(Comments);","map":{"version":3,"sources":["/Users/shadan/Desktop/Mern-stack/week4/Mytinerary-shadan/client/src/components/Comments.js"],"names":["React","Component","CommentForm","connect","getCommentsByItneraryTitle","Comments","state","comments","console","log","props","itinerary","filter","e","itineraryReference","map","comment","index","user","message","mapStateToProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,0BAAT,QAA2C,0BAA3C;;IAEMC,Q;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE;AADJ,K;;;;;;wCAIY;AAClB;AACA;AACA;AACA;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,SAAvB;;AACA,UAAI,KAAKD,KAAL,CAAWC,SAAf,EAA0B;AACxB,aAAKD,KAAL,CAAWN,0BAAX,CAAsC,KAAKM,KAAL,CAAWH,QAAjD;AACD;AACF;;;6BAEQ;AAAA;;AACP,UAAMA,QAAQ,GAAG,KAAKG,KAAL,CAAWH,QAAX,CAAoBK,MAApB,CACf,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,kBAAF,KAAyB,MAAI,CAACJ,KAAL,CAAWC,SAAxC;AAAA,OADc,CAAjB;AAGA,aACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEGJ,QAAQ,CAACQ,GAAT,CAAa,UAACC,OAAD,EAAUC,KAAV;AAAA,eACZ;AAAK,UAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAASD,OAAO,CAACE,IAAjB,CADF,OACmCF,OAAO,CAACG,OAD3C,CADF,CADY;AAAA,OAAb,CAFH,EAUE,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAE,KAAKT,KAAL,CAAWC,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,CADF;AAcD;;;;EAlCoBV,S;;AAqCvB,IAAMmB,eAAe,GAAG,SAAlBA,eAAkB,CAAAd,KAAK,EAAI;AAC/B,SAAO;AACLC,IAAAA,QAAQ,EAAED,KAAK,CAACC;AADX,GAAP;AAGD,CAJD;;AAMA,eAAeJ,OAAO,CACpBiB,eADoB,EAEpB;AAAEhB,EAAAA,0BAA0B,EAA1BA;AAAF,CAFoB,CAAP,CAGbC,QAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\n//import axios from \"axios\";\nimport CommentForm from \"./CommentForm\";\nimport { connect } from \"react-redux\";\nimport { getCommentsByItneraryTitle } from \"../actions/commentAction\";\n\nclass Comments extends Component {\n  state = {\n    comments: []\n  };\n\n  componentDidMount() {\n    // axios.get(`/api/comments`).then(res => {\n    //   console.log(res);\n    //   this.setState({ comments: res.data });\n    // });\n    console.log(this.props.itinerary);\n    if (this.props.itinerary) {\n      this.props.getCommentsByItneraryTitle(this.props.comments);\n    }\n  }\n\n  render() {\n    const comments = this.props.comments.filter(\n      e => e.itineraryReference === this.props.itinerary\n    );\n    return (\n      <div className=\"Comments\">\n        Comments:\n        {comments.map((comment, index) => (\n          <div key={index}>\n            <p>\n              <strong>{comment.user}</strong>:{comment.message}\n              {/* <button className=\"removeComment\">&times;</button> */}\n            </p>\n          </div>\n        ))}\n        <CommentForm itinerary={this.props.itinerary} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    comments: state.comments\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { getCommentsByItneraryTitle }\n)(Comments);\n"]},"metadata":{},"sourceType":"module"}