{"ast":null,"code":"import _classCallCheck from \"/Users/shadan/Desktop/Mern-stack/week3/activity redex added/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shadan/Desktop/Mern-stack/week3/activity redex added/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shadan/Desktop/Mern-stack/week3/activity redex added/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shadan/Desktop/Mern-stack/week3/activity redex added/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shadan/Desktop/Mern-stack/week3/activity redex added/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shadan/Desktop/Mern-stack/week3/activity redex added/client/src/components/Activities.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getActivitiesByTitle } from \"../actions/activitiesAction\";\nimport Slider from \"react-animated-slider\";\nimport \"react-animated-slider/build/horizontal.css\";\nimport Itineraries from \"./Itinerary\";\n\nvar Activities =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Activities, _Component);\n\n  function Activities() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Activities);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Activities)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      activities: [],\n      isVisible: false\n    };\n    return _this;\n  }\n\n  _createClass(Activities, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(this.props.itinerary);\n\n      if (this.props.itinerary) {\n        this.props.getActivitiesByTitle(this.props.itinerary);\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      console.log(nextProps.isVisible);\n      this.setState({\n        isVisible: nextProps.isVisible\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props.activities);\n      return React.createElement(\"div\", {\n        style: {\n          display: this.state.isVisible ? \"inline\" : \"none\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(Slider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, this.props.activities.map(function (activity, index) {\n        return React.createElement(\"div\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, activity.title), React.createElement(\"img\", {\n          src: activity.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        })));\n      })));\n    }\n  }]);\n\n  return Activities;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    activities: state.activities\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getActivitiesByTitle: getActivitiesByTitle\n})(Activities);","map":{"version":3,"sources":["/Users/shadan/Desktop/Mern-stack/week3/activity redex added/client/src/components/Activities.js"],"names":["React","Component","connect","getActivitiesByTitle","Slider","Itineraries","Activities","state","activities","isVisible","console","log","props","itinerary","nextProps","setState","display","map","activity","index","title","image","mapStateToProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,oBAAT,QAAqC,6BAArC;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAO,4CAAP;AACA,OAAOC,WAAP,MAAwB,aAAxB;;IACMC,U;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,UAAU,EAAE,EADN;AAENC,MAAAA,SAAS,EAAE;AAFL,K;;;;;;wCAIY;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,SAAvB;;AACA,UAAI,KAAKD,KAAL,CAAWC,SAAf,EAA0B;AACxB,aAAKD,KAAL,CAAWT,oBAAX,CAAgC,KAAKS,KAAL,CAAWC,SAA3C;AACD;AACF;;;8CACyBC,S,EAAW;AACnCJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,SAAS,CAACL,SAAtB;AACA,WAAKM,QAAL,CAAc;AAAEN,QAAAA,SAAS,EAAEK,SAAS,CAACL;AAAvB,OAAd;AACD;;;6BACQ;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWJ,UAAvB;AAEA,aACE;AAAK,QAAA,KAAK,EAAE;AAAEQ,UAAAA,OAAO,EAAE,KAAKT,KAAL,CAAWE,SAAX,GAAuB,QAAvB,GAAkC;AAA7C,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKG,KAAL,CAAWJ,UAAX,CAAsBS,GAAtB,CAA0B,UAACC,QAAD,EAAWC,KAAX;AAAA,eACzB;AAAK,UAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,QAAQ,CAACE,KAAd,CADF,EAEE;AAAK,UAAA,GAAG,EAAEF,QAAQ,CAACG,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,CADF,CADyB;AAAA,OAA1B,CADH,CADF,CADF;AAcD;;;;EAhCsBpB,S;;AAkCzB,IAAMqB,eAAe,GAAG,SAAlBA,eAAkB,CAAAf,KAAK,EAAI;AAC/B,SAAO;AACLC,IAAAA,UAAU,EAAED,KAAK,CAACC;AADb,GAAP;AAGD,CAJD;;AAMA,eAAeN,OAAO,CACpBoB,eADoB,EAEpB;AAAEnB,EAAAA,oBAAoB,EAApBA;AAAF,CAFoB,CAAP,CAGbG,UAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getActivitiesByTitle } from \"../actions/activitiesAction\";\nimport Slider from \"react-animated-slider\";\nimport \"react-animated-slider/build/horizontal.css\";\nimport Itineraries from \"./Itinerary\";\nclass Activities extends Component {\n  state = {\n    activities: [],\n    isVisible: false\n  };\n  componentDidMount() {\n    console.log(this.props.itinerary);\n    if (this.props.itinerary) {\n      this.props.getActivitiesByTitle(this.props.itinerary);\n    }\n  }\n  componentWillReceiveProps(nextProps) {\n    console.log(nextProps.isVisible);\n    this.setState({ isVisible: nextProps.isVisible });\n  }\n  render() {\n    console.log(this.props.activities);\n\n    return (\n      <div style={{ display: this.state.isVisible ? \"inline\" : \"none\" }}>\n        <Slider>\n          {this.props.activities.map((activity, index) => (\n            <div key={index}>\n              <div>\n                <h2>{activity.title}</h2>\n                <img src={activity.image} />\n              </div>\n            </div>\n          ))}\n        </Slider>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    activities: state.activities\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { getActivitiesByTitle }\n)(Activities);\n"]},"metadata":{},"sourceType":"module"}