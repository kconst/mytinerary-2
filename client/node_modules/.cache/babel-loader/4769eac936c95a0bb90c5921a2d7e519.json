{"ast":null,"code":"var _jsxFileName = \"/Users/shadan/Desktop/Mern-stack/week3/next/client/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\"; //create storage\n\nimport { createStore, applyMiddleware } from \"redux\"; //so that react can interact with the storage ( create  a bigger compoent that includes our main component App)\n\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./reducers/rootReducer\"; //react does everything at the same time thunk is used to do it asynchronosly\n\nimport thunk from \"redux-thunk\"; //adding redux devtools (make sure you add the extension in the frontend json package not in the backend)\n\nimport { composeWithDevTools } from \"redux-devtools-extension\"; //provider is a component that wraps arround the main component i.e. App component\n\nvar store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n})), document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/shadan/Desktop/Mern-stack/week3/next/client/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","createStore","applyMiddleware","Provider","rootReducer","thunk","composeWithDevTools","store","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B,C,CACA;;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C,C,CACA;;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,WAAP,MAAwB,wBAAxB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CACA;;AACA,SAASC,mBAAT,QAAoC,0BAApC,C,CAEA;;AAEA,IAAMC,KAAK,GAAGN,WAAW,CACvBG,WADuB,EAEvBE,mBAAmB,CAACJ,eAAe,CAACG,KAAD,CAAhB,CAFI,CAAzB;AAKAP,QAAQ,CAACU,MAAT,CACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIEE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,E,CAOA;AACA;AACA;;AACAV,aAAa,CAACW,UAAd","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n//create storage\nimport { createStore, applyMiddleware } from \"redux\";\n//so that react can interact with the storage ( create  a bigger compoent that includes our main component App)\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./reducers/rootReducer\";\n//react does everything at the same time thunk is used to do it asynchronosly\nimport thunk from \"redux-thunk\";\n//adding redux devtools (make sure you add the extension in the frontend json package not in the backend)\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\n//provider is a component that wraps arround the main component i.e. App component\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}