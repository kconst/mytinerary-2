{"ast":null,"code":"import _classCallCheck from \"/Users/shadan/Desktop/Mern-stack/week5/favouritrbtn/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shadan/Desktop/Mern-stack/week5/favouritrbtn/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shadan/Desktop/Mern-stack/week5/favouritrbtn/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shadan/Desktop/Mern-stack/week5/favouritrbtn/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shadan/Desktop/Mern-stack/week5/favouritrbtn/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shadan/Desktop/Mern-stack/week5/favouritrbtn/client/src/components/CityAdmin.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getAllCities, removeCity } from \"../actions/citiesAction\";\nimport axios from \"axios\";\n\nvar CityAdmin =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CityAdmin, _Component);\n\n  function CityAdmin() {\n    var _this;\n\n    _classCallCheck(this, CityAdmin);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CityAdmin).call(this));\n\n    _this.toRemove = function (e) {\n      console.log(e.target.id);\n      var cityToDelete = e.target.id;\n      var confirmDelete = window.confirm(\"are you sure you want to delete this city you can not reverse this action?\");\n\n      if (confirmDelete) {\n        _this.props.removeCity(cityToDelete); // Axios.delete(`/api/cities/${cityToDelete}`, {\n        //   withCredentials: true,\n        //   headers: { Authorization: localStorage.getItem(\"token\") }\n        // }).then(res => {\n        //   console.log(res.data);\n        // });\n\n      }\n    };\n\n    _this.handleChange = function (e) {\n      _this.setState({\n        city: _this.refs.city.value,\n        country: _this.refs.country.value\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      var newCity = {\n        city: _this.state.city,\n        country: _this.state.country\n      };\n      _this.refs.city.value = \"\";\n      _this.refs.country.value = \"\";\n      console.log(newCity);\n      axios.post(\"/api/cities/add\", {\n        newCity: newCity\n      }, {\n        withCredentials: true,\n        headers: {\n          Authorization: localStorage.getItem(\"token\")\n        }\n      }).then(function (res) {\n        console.log(res);\n        console.log(res.data);\n      });\n    };\n\n    _this.state = {\n      search: \"\",\n      city: null,\n      country: null\n    };\n    return _this;\n  } //methode to make the filter search\n\n\n  _createClass(CityAdmin, [{\n    key: \"updateSearch\",\n    value: function updateSearch(event) {\n      // console.log(event.target.value);\n      this.setState({\n        search: event.target.value\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"1\");\n      this.props.getAllCities();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      //added for earch bar\n      console.log(this.props.cities);\n      var filteredCities = this.props.cities.filter(function (theCity) {\n        return theCity.city.toUpperCase().indexOf(_this2.state.search.toUpperCase()) !== -1;\n      });\n      console.log(\"4\");\n      return React.createElement(\"div\", {\n        className: \"AllCities\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.search,\n        onChange: this.updateSearch.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, filteredCities.map(function (city) {\n        return React.createElement(\"div\", {\n          className: \"removeCityPage\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"cityPage\",\n          key: city._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, city.city), React.createElement(\"div\", {\n          className: \"removeBtn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: _this2.toRemove,\n          id: city._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, \" \", \"X\", \" \")));\n      })), React.createElement(\"div\", {\n        className: \"cityAdmin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"add a new city\"), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        ref: \"city\",\n        placeholder: \"city\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        ref: \"country\",\n        placeholder: \"country\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"save\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return CityAdmin;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    cities: state.cities\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getAllCities: getAllCities,\n  removeCity: removeCity\n})(CityAdmin);","map":{"version":3,"sources":["/Users/shadan/Desktop/Mern-stack/week5/favouritrbtn/client/src/components/CityAdmin.js"],"names":["React","Component","connect","getAllCities","removeCity","axios","CityAdmin","toRemove","e","console","log","target","id","cityToDelete","confirmDelete","window","confirm","props","handleChange","setState","city","refs","value","country","handleSubmit","newCity","state","post","withCredentials","headers","Authorization","localStorage","getItem","then","res","data","search","event","cities","filteredCities","filter","theCity","toUpperCase","indexOf","updateSearch","bind","map","_id","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getAllCities, removeCity } from \"../actions/citiesAction\";\nimport axios from \"axios\";\n\nclass CityAdmin extends Component {\n  constructor() {\n    super();\n    this.state = {\n      search: \"\",\n      city: null,\n      country: null\n    };\n  }\n\n  //methode to make the filter search\n  updateSearch(event) {\n    // console.log(event.target.value);\n    this.setState({ search: event.target.value });\n  }\n\n  componentDidMount() {\n    console.log(\"1\");\n    this.props.getAllCities();\n  }\n\n  toRemove = e => {\n    console.log(e.target.id);\n    const cityToDelete = e.target.id;\n    let confirmDelete = window.confirm(\n      \"are you sure you want to delete this city you can not reverse this action?\"\n    );\n    if (confirmDelete) {\n      this.props.removeCity(cityToDelete);\n      // Axios.delete(`/api/cities/${cityToDelete}`, {\n      //   withCredentials: true,\n      //   headers: { Authorization: localStorage.getItem(\"token\") }\n      // }).then(res => {\n      //   console.log(res.data);\n      // });\n    }\n  };\n  handleChange = e => {\n    this.setState({\n      city: this.refs.city.value,\n      country: this.refs.country.value\n    });\n  };\n\n  handleSubmit = e => {\n    const newCity = {\n      city: this.state.city,\n      country: this.state.country\n    };\n\n    this.refs.city.value = \"\";\n    this.refs.country.value = \"\";\n\n    console.log(newCity);\n\n    axios\n      .post(\n        `/api/cities/add`,\n        { newCity },\n        {\n          withCredentials: true,\n          headers: { Authorization: localStorage.getItem(\"token\") }\n        }\n      )\n      .then(res => {\n        console.log(res);\n        console.log(res.data);\n      });\n  };\n\n  render() {\n    //added for earch bar\n    console.log(this.props.cities);\n    let filteredCities = this.props.cities.filter(theCity => {\n      return (\n        theCity.city.toUpperCase().indexOf(this.state.search.toUpperCase()) !==\n        -1\n      );\n    });\n    console.log(\"4\");\n\n    return (\n      <div className=\"AllCities\">\n        <input\n          type=\"text\"\n          value={this.state.search}\n          onChange={this.updateSearch.bind(this)}\n        />\n\n        {/* <h1>this is the page for all cities!!!</h1> */}\n\n        <div>\n          {filteredCities.map(city => (\n            <div className=\"removeCityPage\">\n              <div className=\"cityPage\" key={city._id}>\n                {city.city}\n              </div>\n              <div className=\"removeBtn\">\n                <button onClick={this.toRemove} id={city._id}>\n                  {\" \"}\n                  X{\" \"}\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n        <div className=\"cityAdmin\">\n          <div>add a new city</div>\n          <form onSubmit={this.handleSubmit}>\n            <input\n              type=\"text\"\n              required\n              ref=\"city\"\n              placeholder=\"city\"\n              onChange={this.handleChange}\n            />\n            <input\n              type=\"text\"\n              required\n              ref=\"country\"\n              placeholder=\"country\"\n              onChange={this.handleChange}\n            />\n            <input type=\"submit\" value=\"save\" />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    cities: state.cities\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { getAllCities, removeCity }\n)(CityAdmin);\n"]},"metadata":{},"sourceType":"module"}